{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ESP32 MCU EDGE INTELLIGENCE NODE","text":"<p>This project dedicates to the development of a MCU edge intelligence node based on ESP32. If you are interested in this project, please star it and stay tuned.</p> <p></p>"},{"location":"ARCHITECTURE/architecture/","title":"ARCHITECTURE","text":""},{"location":"ARCHITECTURE/architecture/#hardware-architecture","title":"HARDWARE ARCHITECTURE","text":"<p>MAIN CONTROL + PERCEPTION + COMMUNICATION + INTERFACING</p>"},{"location":"ARCHITECTURE/architecture/#software-architecture","title":"SOFTWARE ARCHITECTURE","text":"<p>PHYSICAL LAYER -&gt; DRIVER LAYER -&gt; MIDWARE LAYER -&gt; APPLICATION LAYER</p>"},{"location":"ARCHITECTURE/architecture/#dev-toolchain","title":"DEV TOOLCHAIN","text":"TOOLCHAIN DESCRIPTION PROS CONS ESP_IDF Espressif IoT Development Framework Rich in features, good documentation Steep learning curve MICROPYTHON Python for microcontrollers Easy to learn, rapid development Limited resources ARDUINO Open-source electronics platform Easy to use, large community Limited resources <p>Note</p> <p>For rapid prototyping, we use MICROPYTHON; for high-performance applications, we use ESP_IDF.</p>"},{"location":"COMMUNICATION/communication/","title":"COMMUNICATION","text":""},{"location":"ESP32/ESP32/","title":"ESPRESSIF SYSTEMS","text":"<p>Info</p> <p>Espressif Systems is a semiconductor company based in China, known for developing low-power wireless solutions, including Wi-Fi and Bluetooth modules and SoCs (System on Chips). Their products, such as the ESP8266 and ESP32 series, have gained popularity in IoT, embedded systems, and wireless communication due to their low cost, power efficiency, and ease of use. Espressif provides a range of development tools and software support, making their products widely adopted by developers and engineers in various industries.</p>"},{"location":"ESP32/ESP_IDF/esp_idf/","title":"ESPRESSIF IOT DEVELOPMENT FRAMEWORK (ESP-IDF)","text":"<p>Info</p> <p>ESP-IDF (Espressif IoT Development Framework) is the official development framework for the ESP32 series chips from Espressif. It provides a comprehensive set of tools and libraries to help developers create robust applications for ESP32-based devices. ESP-IDF supports FreeRTOS, Wi-Fi, Bluetooth, and a wide range of peripherals. It is compatible with the GCC toolchain and supports multiple languages like C and C++. The framework includes components for networking, security, power management, and driver development, making it suitable for a wide range of IoT applications.</p> <p>Note</p> <p>There are two ways to use ESP-IDF: ESP-IDF Command Prompt and GUI-based IDEs like Visual Studio Code. The latter is the most popular way to use ESP-IDF.</p>"},{"location":"ESP32/ESP_IDF/esp_idf/#setup","title":"SETUP","text":"<p>Note</p> <p>In terms of interfacing manner, there are three ways to use ESP-IDF:</p> <ul> <li> <p>ESP-IDF Command Prompt: This is the default way to use ESP-IDF. It is a command-line interface that provides access to the tools and utilities required for ESP-IDF development.</p> </li> <li> <p>ESP-IDF IDE: This is an integrated development environment that provides a graphical interface for ESP-IDF development. It includes tools like the ESP-IDF Command Prompt, a text editor, and a project manager.</p> </li> <li> <p>IDE Plugins: These are plugins that integrate ESP-IDF with popular IDEs like Visual Studio Code and Eclipse. They provide features like code completion, syntax highlighting, and debugging support. This is the most popular way to use ESP-IDF.</p> </li> </ul> <ul> <li> <p> How to Install the ESP-IDF Toolchain on Windows \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  Portal </p> </li> <li> <p> How to Install the ESP-IDF Toolchain on Ubuntu \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  Portal </p> </li> </ul>"},{"location":"ESP32/ESP_IDF/esp_idf/#official-guide","title":"OFFICIAL GUIDE","text":""},{"location":"ESP32/ESP_IDF/esp_idf/#online-documentation","title":"Online Documentation","text":"<ul> <li> <p> ESP-IDF Programming Guide \ud83c\udfaf\ud83c\udfc6</p> <p>  Portal </p> </li> </ul>"},{"location":"ESP32/MICROPYTHON/micropython/","title":"MICROPYTHON","text":"<p>Info</p> <p>For ESP32 development, MICROPYTHON is actually also based on ESP_IDF. Compared to ESP_IDF, MICROPYTHON is more suitable for rapid prototyping and development, yet it has lower efficiency and fewer resources.</p>"},{"location":"ESP32/MICROPYTHON/micropython/#esp32-micropython-programming","title":"ESP32 MICROPYTHON PROGRAMMING","text":"<p>For ESP32 development using MICROPYTHON, we have two major steps:</p> <ol> <li>Prepare and Install MICROPYTHON firmware on ESP32. (Sometimes, we need to customize the firmware for specific applications.)</li> <li>Develop and Run MICROPYTHON scripts on ESP32.</li> </ol> <ul> <li> <p> MICROPYTHON DEV IDE</p> <p>VSCODE + MICROPYTHON</p> <p>  Portal </p> </li> </ul>"},{"location":"ESP32/MICROPYTHON/micropython/#micropython-introduction","title":"MICROPYTHON INTRODUCTION","text":"<p>MICROPYTHON is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimized to run on microcontrollers and in constrained environments. It is designed to be easily ported to new microcontroller architectures. MICROPYTHON is a full Python compiler and runtime that runs on the microcontroller hardware. It is designed to be easy to use and understand, and it is especially suitable for rapid prototyping and development.</p>"},{"location":"ESP32/MICROPYTHON/micropython/#micropython-features","title":"MICROPYTHON FEATURES","text":"<ul> <li>Python 3 Syntax: MICROPYTHON is based on Python 3 syntax, which is easy to learn and use.</li> <li>Interactive REPL: MICROPYTHON provides an interactive REPL (Read-Eval-Print Loop) for quick testing and debugging.</li> <li>Microcontroller Support: MICROPYTHON supports a wide range of microcontroller architectures, including ARM, ESP32, and ESP8266.</li> <li>Extensible Modules: MICROPYTHON allows you to extend its functionality by adding custom modules.</li> <li>Cross-Platform Support: MICROPYTHON is cross-platform and can run on Windows, macOS, and Linux.</li> <li>Open Source: MICROPYTHON is open-source software, which means you can modify and distribute it freely.</li> <li>Community Support: MICROPYTHON has a large and active community that provides support and resources for developers.</li> <li>Rapid Development: MICROPYTHON enables rapid prototyping and development of embedded systems and IoT applications.</li> <li>Low Resource Usage: MICROPYTHON is designed to run on microcontrollers with limited resources, making it suitable for constrained environments.</li> <li>Built-in Libraries: MICROPYTHON includes a set of built-in libraries for common tasks, such as networking, file I/O, and hardware interfacing.</li> <li>Portability: MICROPYTHON is designed to be easily ported to new microcontroller architectures, allowing you to reuse your code across different platforms.</li> <li>Memory Management: MICROPYTHON provides automatic memory management, which simplifies memory allocation and deallocation.</li> <li>Garbage Collection: MICROPYTHON includes a garbage collector that automatically reclaims memory that is no longer in use.</li> <li>Hardware Abstraction Layer (HAL): MICROPYTHON provides a hardware abstraction layer that allows you to write platform-independent code.</li> <li>Low-Level Access: MICROPYTHON allows you to access low-level hardware features directly, giving you more control over the hardware.</li> <li>Real-Time Operating System (RTOS) Support: MICROPYTHON supports real-time operating systems, such as FreeRTOS, for multitasking and scheduling.</li> <li>Firmware Updates: MICROPYTHON allows you to update the firmware of your microcontroller over the air (OTA) using Wi-Fi or Bluetooth.</li> </ul>"},{"location":"ESP32/MICROPYTHON/micropython/#official-resources","title":"OFFICIAL RESOURCES","text":"<ul> <li> <p> MICROPYTHON WEBSITE</p> <p>Official website of MICROPYTHON.</p> <p>  Portal </p> </li> <li> <p> MICROPYTHON GITHUB</p> <p>Official GitHub repository of MICROPYTHON.</p> <p>  Portal </p> </li> <li> <p> MICROPYTHON DOCUMENTATION</p> <p>Official documentation of MICROPYTHON.</p> <p>  Portal </p> </li> </ul>"},{"location":"ESP32/MICROPYTHON/micropython/#third-party-resources","title":"THIRD PARTY RESOURCES","text":"<ul> <li> <p> PRECHIN ESP32 DEV \ud83c\udfaf\ud83c\udfc6</p> <p>  Portal </p> </li> </ul>"},{"location":"INSTRUCTIONS/instructions/","title":"PROJECT INSTRUCTIONS","text":"<p>Note</p> <p>This section details the how the node is built and how it should be used.</p>"},{"location":"INSTRUCTIONS/SETUP/project-initialization/","title":"PROJECT INITIALIZATION","text":""},{"location":"INSTRUCTIONS/SETUP/project-initialization/#environment-setup","title":"ENVIRONMENT SETUP","text":"<p>Info</p> <p>We use VSCode + ESP-IDF for development. Details to setup the development environment can be found on the internet. I assume you have already set up the development environment.</p>"},{"location":"INSTRUCTIONS/SETUP/project-initialization/#create-a-new-project","title":"CREATE A NEW PROJECT","text":"<ol> <li>Launch VSCode and then open the command palette by pressing <code>Ctrl+Shift+P</code> (Windows/Linux) or <code>Cmd+Shift+P</code> (macOS).</li> <li>Type <code>ESP-IDF: New Project</code> and press <code>Enter</code>. </li> <li>Enter the project configuration UI and fill in the required information. </li> <li>Choose a template to create a new project. </li> <li>Open in a new window.  </li> </ol>"},{"location":"INSTRUCTIONS/SETUP/project-initialization/#templated-project-structure","title":"TEMPLATED PROJECT STRUCTURE","text":"<pre><code>sample_proj/ # Project root directory\n\u251c\u2500\u2500 CMakeLists.txt # Project CMake configuration file\n\u251c\u2500\u2500 main/ # Main application directory\n\u2502   \u251c\u2500\u2500 CMakeLists.txt # Application CMake configuration file\n\u2502   \u2514\u2500\u2500 main.c # Application source file\n\u2514\u2500\u2500 sdkconfig # Project configuration file\n</code></pre>"},{"location":"INSTRUCTIONS/SETUP/project-initialization/#project-configuration","title":"PROJECT CONFIGURATION","text":"<p>Note</p> <p>This step is to configure the project settings to maximize the power of the hardware, i.e., use target-specific configurations rather than default configurations.</p> <p>Warning</p> <p>Before you open the project configuration UI, make sure you have the project open in VSCode, set the target to your board, and have the ESP-IDF extension installed.</p> <ol> <li>Enter the project configuration UI by pressing <code>Ctrl+Shift+P</code> (Windows/Linux) or <code>Cmd+Shift+P</code> (macOS) and type <code>ESP-IDF: Configure Project</code>. Alternatively, one can click the gear icon on the bottom menu of the VSCode window. </li> <li>'FLASH' configuration. In the search bar, type <code>flash</code> and press <code>Enter</code>.  </li> <li>'Partition Table' configuration. In the search bar, type <code>partition</code> and press <code>Enter</code>.  details to be provided later</li> <li>'PSRAM' configuration. In the search bar, type <code>psram</code> and press <code>Enter</code>. </li> <li>Change the CPU frequency. In the search bar, type <code>cpu</code> and press <code>Enter</code>. Modify the CPU frequency to 240 MHz. </li> <li>Modify the FreeRTOS tick clock frequency. In the search bar, type <code>tick</code> and press <code>Enter</code>. Modify the tick clock frequency to 1000 Hz. </li> <li>Modify the partition table. In the command palette, type <code>ESP-IDF: Open Partition Table Editor UI</code>. </li> <li>Modify the partition table as shown below. </li> <li>Save the all the modifications.</li> </ol> <p>By far, we have finished the project initialization. The configuration is now consistent with the hardware onboard resources. </p>"},{"location":"INSTRUCTIONS/SETUP/project-initialization/#template-program","title":"TEMPLATE PROGRAM","text":"<p>Now, let's create a simple program to test the board. </p> <p>Go to the main.c file and replace the content with the following code:</p> <pre><code>#include \"freertos/FreeRTOS.h\"\n#include \"freertos/task.h\"\n#include \"nvs_flash.h\"\n#include \"esp_system.h\"\n#include \"esp_chip_info.h\"\n#include \"esp_psram.h\"\n#include \"esp_flash.h\"\n\n/**\n * @brief Entry point of the program\n * @param None\n * @retval None\n */\nvoid app_main(void)\n{\n    esp_err_t ret;\n    uint32_t flash_size;\n    esp_chip_info_t chip_info;\n\n    // Initialize NVS\n    ret = nvs_flash_init();\n    if (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND)\n    {\n        ESP_ERROR_CHECK(nvs_flash_erase()); // Erase if needed\n        ret = nvs_flash_init();\n    }\n\n    // Get FLASH size\n    esp_flash_get_size(NULL, &amp;flash_size);\n    esp_chip_info(&amp;chip_info);\n\n    // Display CPU core count\n    printf(\"CPU Cores: %d\\n\", chip_info.cores);\n\n    // Display FLASH size\n    printf(\"Flash size: %ld MB flash\\n\", flash_size / (1024 * 1024));\n\n    // Display PSRAM size\n    printf(\"PSRAM size: %d bytes\\n\", esp_psram_get_size());\n\n    while (1)\n    {\n        printf(\"Hello-ESP32\\r\\n\");\n        vTaskDelay(1000);\n    }\n}\n</code></pre> <p>Then, ensure the serial port number is corrrect, the target board is selected, then click the \"fire flame\" icon to build, flash and monitor the program. Then, you should be able to see the printouts on the serial monitor. </p>"},{"location":"INSTRUCTIONS/SETUP/project-initialization/#conclusions","title":"CONCLUSIONS","text":"<p>Note</p> <p>This project sets up the minimal system development board DNESP32S3M, and this project can serve as a useful template for future development. Compared to STM32, many low level details are hidden from the user, therefore the set up process is much simpler.</p>"},{"location":"INTERFACING/interfacing/","title":"INTERFACING","text":""},{"location":"MAIN-CONTROL/main-control/","title":"MAIN CONTROL","text":"<p>Info</p> <ul> <li>ESP32-S3-DevKitC-1 is the official development board of ESP32-S3.</li> <li>DNESP32S3M and DNESP32S3 are the development boards of Alientek. DNESP32S3M is the minimal system development board, and DNESP32S3 is the development board with rich peripherals.</li> </ul> <p>Note</p> <p>DNESP32S3M is used as the major development board in this project.</p> <p></p> <p></p>"},{"location":"MAIN-CONTROL/main-control/#official-dev-board","title":"OFFICIAL DEV-BOARD","text":"<ul> <li> <p> ESP32-S3-DevKitC-1</p> <p>  Portal </p> </li> </ul>"},{"location":"MAIN-CONTROL/main-control/#alientek","title":"ALIENTEK","text":"<ul> <li> <p> ATK DNESP32S3M DEV BOARD \ud83c\udfaf</p> <p>ATK DNESP32S3M dvelopment board resources.</p> <p>  Portal </p> </li> <li> <p> ATK DNESP32S3 DEV BOARD</p> <p>ATK DNESP32S3 dvelopment board resources.</p> <p>  Portal </p> </li> <li> <p> TUTORIAL</p> <p>ATK DNESP32S3 dvelopment board tutorial. [C1-C6]</p> <p>  Portal </p> </li> </ul>"},{"location":"MAIN-CONTROL/DNESP32S3/DNESP32S3/","title":"ATK-DNESP32S3 DEV BOARD","text":"<ul> <li> <p> ATK DNESP32S3 DEV BOARD</p> <p>ATK DNESP32S3 dvelopment board resources.</p> <p>  Portal </p> </li> <li> <p> TUTORIAL</p> <p>ATK DNESP32S3 dvelopment board tutorial. [C1-C6]</p> <p>  Portal </p> </li> </ul>"},{"location":"MAIN-CONTROL/DNESP32S3M/DNESP32S3M/","title":"ATK-DNESP32S3M DEV BOARD \ud83c\udfaf","text":""},{"location":"MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#dev-board-info","title":"DEV BOARD INFO","text":"<ul> <li> <p> ATK DNESP32S3M DEV BOARD \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>ATK DNESP32S3M dvelopment board resources.</p> <p>  Portal </p> </li> <li> <p> TUTORIAL \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>ATK DNESP32S3 dvelopment board tutorial. </p> <p>  Portal </p> </li> </ul>"},{"location":"MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#dev-framework","title":"DEV FRAMEWORK","text":""},{"location":"MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#esp-idf","title":"ESP-IDF \ud83c\udfaf\ud83c\udfc6\u2705","text":""},{"location":"MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#arduino","title":"Arduino","text":""},{"location":"MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#micropython","title":"MicroPython","text":""},{"location":"MAIN-CONTROL/ESP32-S3-DEVKITC-1/ESP32-S3-DEVKITC-1/","title":"ESP32-S3-DevKitC-1","text":"<ul> <li> <p> ESP32-S3-DevKitC-1</p> <p>  Portal </p> </li> </ul>"},{"location":"PERCEPTION/perception/","title":"SENSING","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"zh/","title":"ESP32\u5fae\u63a7\u5236\u5668\u8fb9\u7f18\u667a\u80fd\u8282\u70b9","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u81f4\u529b\u4e8e\u57fa\u4e8eESP32\u7684\u5fae\u63a7\u5236\u5668\u8fb9\u7f18\u667a\u80fd\u8282\u70b9\u7684\u5f00\u53d1\u3002\u5982\u679c\u4f60\u5bf9\u8fd9\u4e2a\u9879\u76ee\u611f\u5174\u8da3\uff0c\u8bf7\u7ed9\u5b83\u70b9\u4e2a\u8d5e\u5e76\u4fdd\u6301\u5173\u6ce8\u3002</p> <p></p>"},{"location":"zh/ARCHITECTURE/architecture/","title":"\u67b6\u6784","text":""},{"location":"zh/ARCHITECTURE/architecture/#_2","title":"\u786c\u4ef6\u67b6\u6784","text":"<p>\u4e3b\u63a7 + \u611f\u77e5 + \u901a\u4fe1 + \u4ea4\u4e92</p>"},{"location":"zh/ARCHITECTURE/architecture/#_3","title":"\u8f6f\u4ef6\u67b6\u6784","text":"<p>\u7269\u7406\u5c42 -&gt; \u9a71\u52a8\u5c42 -&gt; \u4e2d\u95f4\u4ef6\u5c42 -&gt; \u5e94\u7528\u5c42 </p>"},{"location":"zh/ARCHITECTURE/architecture/#_4","title":"\u5f00\u53d1\u5de5\u5177\u94fe","text":"\u5de5\u5177\u94fe \u63cf\u8ff0 \u4f18\u52bf \u52a3\u52bf ESP_IDF Espressif IoT Development Framework \u529f\u80fd\u4e30\u5bcc\uff0c\u6587\u6863\u5b8c\u5584 \u5b66\u4e60\u66f2\u7ebf\u9661 MICROPYTHON Python for microcontrollers \u6613\u5b66\uff0c\u5f00\u53d1\u8fc5\u901f \u8d44\u6e90\u6709\u9650 ARDUINO \u5f00\u6e90\u7535\u5b50\u5e73\u53f0 \u6613\u7528\uff0c\u793e\u533a\u5e9e\u5927 \u8d44\u6e90\u6709\u9650 <p>Note</p> <p>\u5bf9\u4e8e\u5feb\u901f\u539f\u578b\u8bbe\u8ba1\uff0c\u6211\u4eec\u4f7f\u7528 MICROPYTHON\uff1b\u5bf9\u4e8e\u9ad8\u6027\u80fd\u5e94\u7528\uff0c\u6211\u4eec\u4f7f\u7528 ESP_IDF\u3002</p>"},{"location":"zh/COMMUNICATION/communication/","title":"\u901a\u4fe1","text":""},{"location":"zh/ESP32/ESP32/","title":"\u4e50\u946b\u79d1\u6280","text":"<p>Info</p> <p>\u4e50\u946b\u79d1\u6280 \u662f\u4e00\u5bb6\u603b\u90e8\u4f4d\u4e8e\u4e2d\u56fd\u7684\u534a\u5bfc\u4f53\u516c\u53f8\uff0c\u4ee5\u5f00\u53d1\u4f4e\u529f\u8017\u65e0\u7ebf\u89e3\u51b3\u65b9\u6848\u95fb\u540d\uff0c\u5305\u62ecWi-Fi\u548c\u84dd\u7259\u6a21\u5757\u4ee5\u53ca\u7cfb\u7edf\u7ea7\u82af\u7247\uff08SoC\uff09\u3002\u5176\u4ea7\u54c1\uff0c\u5982ESP8266\u548cESP32\u7cfb\u5217\uff0c\u56e0\u5176\u4f4e\u6210\u672c\u3001\u8282\u80fd\u548c\u6613\u7528\u6027\u5728\u7269\u8054\u7f51\u3001\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u65e0\u7ebf\u901a\u4fe1\u9886\u57df\u5e7f\u53d7\u6b22\u8fce\u3002\u4e50\u946b\u79d1\u6280\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f00\u53d1\u5de5\u5177\u548c\u8f6f\u4ef6\u652f\u6301\uff0c\u4f7f\u5176\u4ea7\u54c1\u88ab\u4f17\u591a\u5f00\u53d1\u8005\u548c\u5de5\u7a0b\u5e08\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5404\u7c7b\u884c\u4e1a\u4e2d\u3002</p>"},{"location":"zh/ESP32/ESP_IDF/esp_idf/","title":"\u4e50\u946b\u7269\u8054\u7f51\u5f00\u53d1\u6846\u67b6 (ESP-IDF)","text":"<p>Info</p> <p>ESP-IDF\uff08\u4e50\u946b\u7269\u8054\u7f51\u5f00\u53d1\u6846\u67b6\uff09 \u662f\u4e50\u946b\u79d1\u6280\u4e3aESP32\u7cfb\u5217\u82af\u7247\u63d0\u4f9b\u7684\u5b98\u65b9\u5f00\u53d1\u6846\u67b6\u3002\u5b83\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u5de5\u5177\u548c\u5e93\uff0c\u5e2e\u52a9\u521b\u5efa\u57fa\u4e8eESP32\u8bbe\u5907\u7684\u7a33\u5065\u5e94\u7528\u3002ESP-IDF\u652f\u6301FreeRTOS\u3001Wi-Fi\u3001\u84dd\u7259\u4ee5\u53ca\u591a\u79cd\u5916\u8bbe\u63a5\u53e3\u3002\u8be5\u6846\u67b6\u517c\u5bb9GCC\u5de5\u5177\u94fe\uff0c\u652f\u6301C\u548cC++\u7b49\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u542b\u7f51\u7edc\u3001\u5b89\u5168\u3001\u529f\u8017\u7ba1\u7406\u548c\u9a71\u52a8\u5f00\u53d1\u7b49\u7ec4\u4ef6\uff0c\u975e\u5e38\u9002\u5408\u5e7f\u6cdb\u7684\u7269\u8054\u7f51\u5e94\u7528\u5f00\u53d1\u3002</p> <p>Note</p> <p>\u4f7f\u7528ESP-IDF\u6709\u4e24\u79cd\u65b9\u5f0f\uff1aESP-IDF\u547d\u4ee4\u63d0\u793a\u7b26 \u548c \u57fa\u4e8eGUI\u7684IDE \uff0c\u5982Visual Studio Code\u3002\u540e\u8005\u662f\u4f7f\u7528ESP-IDF\u6700\u6d41\u884c\u7684\u65b9\u5f0f\u3002</p>"},{"location":"zh/ESP32/ESP_IDF/esp_idf/#_1","title":"\u5b89\u88c5","text":"<p>Note</p> <p>\u5728\u4f7f\u7528\u65b9\u5f0f\u4e0a\uff0c\u6709\u4e09\u79cd\u4f7f\u7528ESP-IDF\u7684\u65b9\u5f0f\uff1a</p> <ul> <li> <p>ESP-IDF\u547d\u4ee4\u63d0\u793a\u7b26\uff1a\u8fd9\u662f\u4f7f\u7528ESP-IDF\u7684\u9ed8\u8ba4\u65b9\u5f0f\u3002\u5b83\u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u754c\u9762\uff0c\u63d0\u4f9b\u4e86ESP-IDF\u5f00\u53d1\u6240\u9700\u7684\u5de5\u5177\u548c\u5b9e\u7528\u7a0b\u5e8f\u3002</p> </li> <li> <p>ESP-IDF\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff1a\u8fd9\u662f\u4e00\u4e2a\u63d0\u4f9bESP-IDF\u5f00\u53d1\u56fe\u5f62\u754c\u9762\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\u3002\u5b83\u5305\u62ecESP-IDF\u547d\u4ee4\u63d0\u793a\u7b26\u3001\u6587\u672c\u7f16\u8f91\u5668\u548c\u9879\u76ee\u7ba1\u7406\u5668\u7b49\u5de5\u5177\u3002</p> </li> <li> <p>IDE\u63d2\u4ef6\uff1a\u8fd9\u4e9b\u63d2\u4ef6\u5c06ESP-IDF\u4e0e\u6d41\u884c\u7684IDE\uff08\u5982Visual Studio Code\u548cEclipse\uff09\u96c6\u6210\u3002\u5b83\u4eec\u63d0\u4f9b\u4ee3\u7801\u8865\u5168\u3001\u8bed\u6cd5\u9ad8\u4eae\u548c\u8c03\u8bd5\u652f\u6301\u7b49\u529f\u80fd\u3002\u8fd9\u662f\u4f7f\u7528ESP-IDF\u6700\u6d41\u884c\u7684\u65b9\u5f0f\u3002</p> </li> </ul> <ul> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011\uff5c\u4f7f\u7528\u4e00\u952e\u5b89\u88c5\u5de5\u5177\u5feb\u901f\u642d\u5efa ESP-IDF \u5f00\u53d1\u73af\u5883 (Windows) \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011\uff5c\u4f7f\u7528 VS Code \u5feb\u901f\u642d\u5efa ESP-IDF \u5f00\u53d1\u73af\u5883 (Windows\u3001Linux\u3001MacOS) \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>Recommended.</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/ESP_IDF/esp_idf/#_2","title":"\u5b98\u65b9\u6307\u5357","text":""},{"location":"zh/ESP32/ESP_IDF/esp_idf/#_3","title":"\u5728\u7ebf\u6587\u6863","text":"<ul> <li> <p> ESP-IDF \u7f16\u7a0b\u6307\u5357 \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/ESP_IDF/esp_idf/#_4","title":"\u89c6\u9891\u6559\u7a0b","text":"<ul> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011| \u4e50\u946b\u7269\u8054\u7f51\u5f00\u53d1\u6846\u67b6 ESP-IDF \u5f00\u53d1\u5165\u95e8 \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011| \u4e50\u946b AIoT \u5f00\u53d1\u8d44\u6e90\u4e0e\u5e94\u7528\u8bb2\u89e3 \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u3010\u4e50\u946b\u6559\u7a0b\u3011| \u57fa\u4e8e\u4e50\u946b ESP32-S3 \u7684 AIoT \u7f16\u7a0b\u5b9e\u6218 \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/ESP_IDF/esp_idf/#_5","title":"\u7b2c\u4e09\u65b9\u6559\u7a0b","text":"<ul> <li> <p> DURUOFU \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> LEARNEPS32 \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u5b64\u72ec\u7684\u4e8c\u8fdb\u5236 ESP-IDF \u6559\u7a0b \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u30102024\u6700\u65b0\u7248 ESP32\u6559\u7a0b\uff08\u57fa\u4e8eESP-IDF\uff09\u3011ESP32\u5165\u95e8\u7ea7\u5f00\u53d1\u8bfe\u7a0b \u66f4\u65b0\u4e2d \u4e2d\u6587\u5b57\u5e55 \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/ESP_IDF/esp_idf/#freertos","title":"FREERTOS","text":"<p>\u7531\u4e8eESP-IDF\u662f\u57fa\u4e8eFreeRTOS\u7684\uff0c\u56e0\u6b64\u5b66\u4e60FreeRTOS\u5bf9\u4e8e\u7406\u89e3ESP-IDF\u975e\u5e38\u91cd\u8981\u3002</p> <ul> <li> <p> ESP32_freeRTOS\u6559\u7a0b \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u5b64\u72ec\u7684\u4e8c\u8fdb\u5236 FREERTOS \u6559\u7a0b</p> <p>\u57fa\u4e8eArduinoIDE</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/MICROPYTHON/micropython/","title":"MICROPYTHON","text":"<p>Info</p> <p>\u5bf9\u4e8e ESP32 \u5f00\u53d1\uff0cMICROPYTHON \u5b9e\u9645\u4e0a\u4e5f\u662f\u57fa\u4e8e ESP_IDF \u7684\u3002\u4e0e ESP_IDF \u76f8\u6bd4\uff0cMICROPYTHON \u66f4\u9002\u5408\u5feb\u901f\u539f\u578b\u8bbe\u8ba1\u548c\u5f00\u53d1\uff0c\u4f46\u6548\u7387\u8f83\u4f4e\uff0c\u8d44\u6e90\u8f83\u5c11\u3002</p>"},{"location":"zh/ESP32/MICROPYTHON/micropython/#esp32-micropython","title":"ESP32 MICROPYTHON \u7f16\u7a0b","text":"<p>\u5bf9\u4e8e\u4f7f\u7528micropython\u7684ESP32\u7f16\u7a0b\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u4e3b\u8981\u6b65\u9aa4\uff1a</p> <ol> <li>\u51c6\u5907\u548c\u5b89\u88c5micropython\u56fa\u4ef6\u3002\u6709\u65f6\u5019\u9700\u8981\u5b9a\u5236\u56fa\u4ef6\u4ee5\u652f\u6301\u7279\u5b9a\u7684\u786c\u4ef6\u529f\u80fd\u3002</li> <li>\u5f00\u53d1\u548c\u8fd0\u884cmicropython\u811a\u672c\u3002</li> </ol> <ul> <li> <p> MICROPYTHON DEV IDE</p> <p>VSCODE + MICROPYTHON</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/MICROPYTHON/micropython/#micropython_1","title":"MICROPYTHON \u7b80\u4ecb","text":"<p>MICROPYTHON \u662f Python 3 \u7f16\u7a0b\u8bed\u8a00\u7684\u7cbe\u7b80\u9ad8\u6548\u5b9e\u73b0\uff0c\u5305\u542b Python \u6807\u51c6\u5e93\u7684\u4e00\u4e2a\u5c0f\u5b50\u96c6\uff0c\u7ecf\u8fc7\u4f18\u5316\u4ee5\u5728\u5fae\u63a7\u5236\u5668\u548c\u53d7\u9650\u73af\u5883\u4e2d\u8fd0\u884c\u3002\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u6613\u4e8e\u79fb\u690d\u5230\u65b0\u7684\u5fae\u63a7\u5236\u5668\u67b6\u6784\u3002MICROPYTHON \u662f\u4e00\u4e2a\u5b8c\u6574\u7684 Python \u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\uff0c\u8fd0\u884c\u5728\u5fae\u63a7\u5236\u5668\u786c\u4ef6\u4e0a\u3002\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u6613\u4e8e\u4f7f\u7528\u548c\u7406\u89e3\uff0c\u7279\u522b\u9002\u5408\u5feb\u901f\u539f\u578b\u8bbe\u8ba1\u548c\u5f00\u53d1\u3002</p>"},{"location":"zh/ESP32/MICROPYTHON/micropython/#micropython_2","title":"MICROPYTHON \u7279\u6027","text":"<ul> <li>Python 3 \u8bed\u6cd5\uff1aMICROPYTHON \u57fa\u4e8e Python 3 \u8bed\u6cd5\uff0c\u6613\u4e8e\u5b66\u4e60\u548c\u4f7f\u7528\u3002</li> <li>\u4ea4\u4e92\u5f0f REPL\uff1aMICROPYTHON \u63d0\u4f9b\u4e00\u4e2a\u4ea4\u4e92\u5f0f REPL\uff08Read-Eval-Print Loop\uff09\u7528\u4e8e\u5feb\u901f\u6d4b\u8bd5\u548c\u8c03\u8bd5\u3002</li> <li>\u5fae\u63a7\u5236\u5668\u652f\u6301\uff1aMICROPYTHON \u652f\u6301\u591a\u79cd\u5fae\u63a7\u5236\u5668\u67b6\u6784\uff0c\u5305\u62ec ARM\u3001ESP32 \u548c ESP8266\u3002</li> <li>\u53ef\u6269\u5c55\u6a21\u5757\uff1aMICROPYTHON \u5141\u8bb8\u60a8\u901a\u8fc7\u6dfb\u52a0\u81ea\u5b9a\u4e49\u6a21\u5757\u6765\u6269\u5c55\u5176\u529f\u80fd\u3002</li> <li>\u8de8\u5e73\u53f0\u652f\u6301\uff1aMICROPYTHON \u662f\u8de8\u5e73\u53f0\u7684\uff0c\u53ef\u4ee5\u5728 Windows\u3001macOS \u548c Linux \u4e0a\u8fd0\u884c\u3002</li> <li>\u5f00\u6e90\uff1aMICROPYTHON \u662f\u5f00\u6e90\u8f6f\u4ef6\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u81ea\u7531\u4fee\u6539\u548c\u5206\u53d1\u5b83\u3002</li> <li>\u793e\u533a\u652f\u6301\uff1aMICROPYTHON \u6709\u4e00\u4e2a\u5e9e\u5927\u6d3b\u8dc3\u7684\u793e\u533a\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u652f\u6301\u548c\u8d44\u6e90\u3002</li> <li>\u5feb\u901f\u5f00\u53d1\uff1aMICROPYTHON \u53ef\u4ee5\u5feb\u901f\u539f\u578b\u8bbe\u8ba1\u548c\u5f00\u53d1\u5d4c\u5165\u5f0f\u7cfb\u7edf\u548c\u7269\u8054\u7f51\u5e94\u7528\u3002</li> <li>\u4f4e\u8d44\u6e90\u4f7f\u7528\uff1aMICROPYTHON \u8bbe\u8ba1\u7528\u4e8e\u5728\u8d44\u6e90\u6709\u9650\u7684\u5fae\u63a7\u5236\u5668\u4e0a\u8fd0\u884c\uff0c\u9002\u7528\u4e8e\u53d7\u9650\u73af\u5883\u3002</li> <li>\u5185\u7f6e\u5e93\uff1aMICROPYTHON \u5305\u542b\u4e00\u7ec4\u7528\u4e8e\u5e38\u89c1\u4efb\u52a1\u7684\u5185\u7f6e\u5e93\uff0c\u5982\u7f51\u7edc\u3001\u6587\u4ef6 I/O \u548c\u786c\u4ef6\u4ea4\u4e92\u3002</li> <li>\u53ef\u79fb\u690d\u6027\uff1aMICROPYTHON \u8bbe\u8ba1\u4e3a\u6613\u4e8e\u79fb\u690d\u5230\u65b0\u7684\u5fae\u63a7\u5236\u5668\u67b6\u6784\uff0c\u5141\u8bb8\u60a8\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u91cd\u7528\u60a8\u7684\u4ee3\u7801\u3002</li> <li>\u5185\u5b58\u7ba1\u7406\uff1aMICROPYTHON \u63d0\u4f9b\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u7b80\u5316\u4e86\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u3002</li> <li>\u5783\u573e\u56de\u6536\uff1aMICROPYTHON \u5305\u542b\u4e00\u4e2a\u5783\u573e\u56de\u6536\u5668\uff0c\u81ea\u52a8\u56de\u6536\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\u3002</li> <li>\u786c\u4ef6\u62bd\u8c61\u5c42\uff08HAL\uff09\uff1aMICROPYTHON \u63d0\u4f9b\u786c\u4ef6\u62bd\u8c61\u5c42\uff0c\u5141\u8bb8\u60a8\u7f16\u5199\u5e73\u53f0\u65e0\u5173\u7684\u4ee3\u7801\u3002</li> <li>\u4f4e\u7ea7\u8bbf\u95ee\uff1aMICROPYTHON \u5141\u8bb8\u60a8\u76f4\u63a5\u8bbf\u95ee\u4f4e\u7ea7\u786c\u4ef6\u529f\u80fd\uff0c\u8ba9\u60a8\u66f4\u591a\u5730\u63a7\u5236\u786c\u4ef6\u3002</li> <li>\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\uff08RTOS\uff09\u652f\u6301\uff1aMICROPYTHON \u652f\u6301\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5982 FreeRTOS\uff0c\u7528\u4e8e\u591a\u4efb\u52a1\u5904\u7406\u548c\u8c03\u5ea6\u3002</li> <li>\u56fa\u4ef6\u66f4\u65b0\uff1aMICROPYTHON \u5141\u8bb8\u60a8\u901a\u8fc7 Wi-Fi \u6216\u84dd\u7259\u65e0\u7ebf\u66f4\u65b0\u60a8\u7684\u5fae\u63a7\u5236\u5668\u56fa\u4ef6\u3002</li> </ul>"},{"location":"zh/ESP32/MICROPYTHON/micropython/#_1","title":"\u5b98\u65b9\u8d44\u6e90","text":"<ul> <li> <p> MICROPYTHON \u7f51\u7ad9</p> <p>Official website of MICROPYTHON.</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> MICROPYTHON GITHUB</p> <p>Official GitHub repository of MICROPYTHON.</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> MICROPYTHON \u6587\u6863</p> <p>Official documentation of MICROPYTHON.</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/ESP32/MICROPYTHON/micropython/#_2","title":"\u4e09\u65b9\u8d44\u6e90","text":"<ul> <li> <p> \u666e\u4e2d\u79d1\u6280ESP32\u5f00\u53d1 \ud83c\udfaf\ud83c\udfc6</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/INSTRUCTIONS/instructions/","title":"\u9879\u76ee\u8bf4\u660e","text":"<p>Note</p> <p>\u672c\u6587\u6863\u8bb0\u5f55\u4e86\u5982\u4f55\u6784\u5efa\u8282\u70b9\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u8282\u70b9\u3002</p>"},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/","title":"\u9879\u76ee\u521d\u59cb\u5316","text":""},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/#_2","title":"\u73af\u5883\u51c6\u5907","text":"<p>Info</p> <p>\u6211\u4eec\u4f7f\u7528 VSCode + ESP-IDF \u8fdb\u884c\u5f00\u53d1\u3002\u6709\u5173\u8bbe\u7f6e\u5f00\u53d1\u73af\u5883\u7684\u8be6\u7ec6\u4fe1\u606f\u53ef\u4ee5\u5728\u4e92\u8054\u7f51\u4e0a\u627e\u5230\u3002\u6211\u5047\u8bbe\u60a8\u5df2\u7ecf\u8bbe\u7f6e\u597d\u4e86\u5f00\u53d1\u73af\u5883\u3002</p>"},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/#_3","title":"\u521b\u5efa\u65b0\u9879\u76ee","text":"<ol> <li>\u542f\u52a8 VSCode\uff0c\u7136\u540e\u901a\u8fc7\u6309 <code>Ctrl+Shift+P</code>\uff08Windows/Linux\uff09\u6216 <code>Cmd+Shift+P</code>\uff08macOS\uff09\u6253\u5f00\u547d\u4ee4\u9762\u677f\u3002</li> <li>\u8f93\u5165 <code>ESP-IDF: New Project</code> \u5e76\u6309 <code>Enter</code>\u3002 </li> <li>\u8fdb\u5165\u9879\u76ee\u914d\u7f6e UI \u5e76\u586b\u5199\u6240\u9700\u4fe1\u606f\u3002 </li> <li>\u9009\u62e9\u4e00\u4e2a\u6a21\u677f\u6765\u521b\u5efa\u65b0\u9879\u76ee\u3002 </li> <li>\u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u3002  </li> </ol>"},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/#_4","title":"\u6a21\u677f\u5316\u9879\u76ee\u7ed3\u6784","text":"<pre><code>sample_proj/ # \u9879\u76ee\u6839\u76ee\u5f55\n\u251c\u2500\u2500 CMakeLists.txt # \u9879\u76ee CMake \u914d\u7f6e\u6587\u4ef6\n\u251c\u2500\u2500 main/ # \u4e3b\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\n\u2502   \u251c\u2500\u2500 CMakeLists.txt # \u5e94\u7528\u7a0b\u5e8f CMake \u914d\u7f6e\u6587\u4ef6\n\u2502   \u2514\u2500\u2500 main.c # \u5e94\u7528\u7a0b\u5e8f\u6e90\u6587\u4ef6\n\u2514\u2500\u2500 sdkconfig # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n</code></pre>"},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/#_5","title":"\u9879\u76ee\u914d\u7f6e","text":"<p>Note</p> <p>\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u914d\u7f6e\u9879\u76ee\u8bbe\u7f6e\u4ee5\u6700\u5927\u5316\u786c\u4ef6\u7684\u6027\u80fd\uff0c\u5373\u4f7f\u7528\u7279\u5b9a\u4e8e\u76ee\u6807\u7684\u914d\u7f6e\u800c\u4e0d\u662f\u9ed8\u8ba4\u914d\u7f6e\u3002</p> <p>Warning</p> <p>\u5728\u6253\u5f00\u9879\u76ee\u914d\u7f6e UI \u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u5728 VSCode \u4e2d\u6253\u5f00\u4e86\u9879\u76ee\uff0c\u5c06\u76ee\u6807\u8bbe\u7f6e\u4e3a\u5bf9\u5e94\u7684\u677f\u5b50\uff0c\u5e76\u5b89\u88c5\u4e86 ESP-IDF \u6269\u5c55\u3002</p> <ol> <li>\u901a\u8fc7\u6309 <code>Ctrl+Shift+P</code>\uff08Windows/Linux\uff09\u6216 <code>Cmd+Shift+P</code>\uff08macOS\uff09\u5e76\u8f93\u5165 <code>ESP-IDF: Configure Project</code> \u8fdb\u5165\u9879\u76ee\u914d\u7f6e UI\u3002\u6216\u8005\uff0c\u53ef\u4ee5\u70b9\u51fb VSCode \u7a97\u53e3\u5e95\u90e8\u83dc\u5355\u7684\u9f7f\u8f6e\u56fe\u6807\u3002 </li> <li>'FLASH' \u914d\u7f6e\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>flash</code> \u5e76\u6309 <code>Enter</code>\u3002 </li> <li>'Partition Table' \u914d\u7f6e\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>partition</code> \u5e76\u6309 <code>Enter</code>\u3002  \u8be6\u7ec6\u4fe1\u606f\u7a0d\u540e\u63d0\u4f9b</li> <li>'PSRAM' \u914d\u7f6e\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>psram</code> \u5e76\u6309 <code>Enter</code>\u3002 </li> <li>\u66f4\u6539 CPU \u9891\u7387\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>cpu</code> \u5e76\u6309 <code>Enter</code>\u3002\u5c06 CPU \u9891\u7387\u4fee\u6539\u4e3a 240 MHz\u3002 </li> <li>\u4fee\u6539 FreeRTOS tick \u65f6\u949f\u9891\u7387\u3002\u5728\u641c\u7d22\u680f\u4e2d\u8f93\u5165 <code>tick</code> \u5e76\u6309 <code>Enter</code>\u3002\u5c06\u9891\u7387\u4fee\u6539\u4e3a 1000\u3002 </li> <li>\u4fee\u6539\u5206\u533a\u8868\u3002\u5728\u547d\u4ee4\u9762\u677f\u4e2d\u8f93\u5165 <code>ESP-IDF: Open Partition Table Editor UI</code>\u3002 </li> <li>\u4fee\u6539\u5206\u533a\u8868\u5982\u4e0b\u6240\u793a\u3002 </li> <li>\u4fdd\u5b58\u6240\u6709\u4fee\u6539\u3002</li> </ol> <p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u4e86\u9879\u76ee\u521d\u59cb\u5316\u3002\u914d\u7f6e\u4fe1\u606f\u73b0\u5728\u4e0e\u786c\u4ef6\u677f\u4e0a\u8d44\u6e90\u4e00\u81f4\u3002</p>"},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/#_6","title":"\u6a21\u677f\u7a0b\u5e8f","text":"<p>\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f\u6765\u6d4b\u8bd5\u677f\u5b50\u3002</p> <p>\u8f6c\u5230 main.c \u6587\u4ef6\u5e76\u7528\u4ee5\u4e0b\u4ee3\u7801\u66ff\u6362\u5185\u5bb9\uff1a</p> <pre><code>#include \"freertos/FreeRTOS.h\"\n#include \"freertos/task.h\"\n#include \"nvs_flash.h\"\n#include \"esp_system.h\"\n#include \"esp_chip_info.h\"\n#include \"esp_psram.h\"\n#include \"esp_flash.h\"\n\n/**\n * @brief Entry point of the program\n * @param None\n * @retval None\n */\nvoid app_main(void)\n{\n    esp_err_t ret;\n    uint32_t flash_size;\n    esp_chip_info_t chip_info;\n\n    // Initialize NVS\n    ret = nvs_flash_init();\n    if (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND)\n    {\n        ESP_ERROR_CHECK(nvs_flash_erase()); // Erase if needed\n        ret = nvs_flash_init();\n    }\n\n    // Get FLASH size\n    esp_flash_get_size(NULL, &amp;flash_size);\n    esp_chip_info(&amp;chip_info);\n\n    // Display CPU core count\n    printf(\"CPU Cores: %d\\n\", chip_info.cores);\n\n    // Display FLASH size\n    printf(\"Flash size: %ld MB flash\\n\", flash_size / (1024 * 1024));\n\n    // Display PSRAM size\n    printf(\"PSRAM size: %d bytes\\n\", esp_psram_get_size());\n\n    while (1)\n    {\n        printf(\"Hello-ESP32\\r\\n\");\n        vTaskDelay(1000);\n    }\n}\n</code></pre> <p>\u7136\u540e\uff0c\u786e\u4fdd\u4e32\u53e3\u6b63\u786e\uff0c\u677f\u5b50\u8bbe\u7f6e\u6b63\u786e\uff0c\u7136\u540e\u7f16\u8bd1\u5e76\u70e7\u5f55\u7a0b\u5e8f\u3002\u7136\u540e\uff0c\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u4e32\u53e3\u8f93\u51fa\u663e\u793a\u5f00\u53d1\u677f\u4fe1\u606f\u548c <code>Hello-ESP32</code> \u6d88\u606f\u3002</p>"},{"location":"zh/INSTRUCTIONS/SETUP/project-initialization/#_7","title":"\u7ed3\u8bba","text":"<p>Note</p> <p>\u8fd9\u4e2a\u9879\u76ee\u5bf9DNESP32S3M\u6700\u5c0f\u7cfb\u7edf\u677f\u8fdb\u884c\u4e86\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e3a\u540e\u7eed\u5f00\u53d1\u63d0\u4f9b\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u6a21\u677f\u3002\u76f8\u6bd4\u8f83\u4e0eSTM32\uff0cESP32\u7684\u5f00\u53d1\u9690\u85cf\u4e86\u8bb8\u591a\u7ec6\u8282\uff0c\u540c\u65f6\u4e5f\u4f7f\u5f97\u8bbe\u7f6e\u6d41\u7a0b\u66f4\u52a0\u7b80\u5355\u3002</p>"},{"location":"zh/INTERFACING/interfacing/","title":"\u4ea4\u4e92","text":""},{"location":"zh/MAIN-CONTROL/main-control/","title":"\u4e3b\u63a7","text":"<p>Info</p> <ul> <li>ESP32-S3-DevKitC-1 \u662f ESP32-S3 \u7684\u5b98\u65b9\u5f00\u53d1\u677f\u3002</li> <li>DNESP32S3M \u548c DNESP32S3 \u662f\u6b63\u70b9\u539f\u5b50\u7684\u5f00\u53d1\u677f\u3002DNESP32S3M \u662f\u6700\u5c0f\u7cfb\u7edf\u5f00\u53d1\u677f\uff0cDNESP32S3 \u662f\u5e26\u6709\u4e30\u5bcc\u5916\u8bbe\u7684\u5f00\u53d1\u677f\u3002</li> </ul> <p>Note</p> <p>DNESP32S3M \u662f\u672c\u9879\u76ee\u7684\u4e3b\u8981\u5f00\u53d1\u677f\u3002</p> <p></p> <p></p>"},{"location":"zh/MAIN-CONTROL/main-control/#_2","title":"\u5b98\u65b9\u5f00\u53d1\u677f","text":"<ul> <li> <p> ESP32-S3-DevKitC-1</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/main-control/#_3","title":"\u6b63\u70b9\u539f\u5b50","text":"<ul> <li> <p> ATK DNESP32S3M \u5f00\u53d1\u677f \ud83c\udfaf</p> <p>ATK DNESP32S3M \u5f00\u53d1\u677f\u8d44\u6e90\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> ATK DNESP32S3 \u5f00\u53d1\u677f</p> <p>ATK DNESP32S3 \u5f00\u53d1\u677f\u8d44\u6e90\u3002</p> <p>  Portal </p> </li> <li> <p> \u6b63\u70b9\u539f\u5b50ESP32\u6559\u7a0b</p> <p>ATK DNESP32S3 \u5f00\u53d1\u677f\u6559\u7a0b\u3002 [C1-C6]</p> <p>  Portal </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/DNESP32S3/DNESP32S3/","title":"ATK-DNESP32S3 \u5f00\u53d1\u677f","text":"<ul> <li> <p> ATK DNESP32S3 DEV BOARD</p> <p>ATK DNESP32S3 dvelopment board resources.</p> <p>  Portal </p> </li> <li> <p> TUTORIAL</p> <p>ATK DNESP32S3 dvelopment board tutorial. [C1-C6]</p> <p>  Portal </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/DNESP32S3M/DNESP32S3M/","title":"ATK-DNESP32S3M \u5f00\u53d1\u677f \ud83c\udfaf","text":""},{"location":"zh/MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#_1","title":"\u5f00\u53d1\u677f\u4fe1\u606f","text":"<ul> <li> <p> ATK DNESP32S3M \u5f00\u53d1\u677f \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>ATK DNESP32S3M \u5f00\u53d1\u677f\u8d44\u6e90\u3002</p> <p>  \u4f20\u9001\u95e8 </p> </li> <li> <p> \u6b63\u70b9\u539f\u5b50ESP32\u6559\u7a0b \ud83c\udfaf\ud83c\udfc6\u2705</p> <p>ATK DNESP32S3 \u5f00\u53d1\u677f\u6559\u7a0b\u3002</p> <p>  Portal </p> </li> </ul>"},{"location":"zh/MAIN-CONTROL/DNESP32S3M/DNESP32S3M/#_2","title":"\u5f00\u53d1\u6846\u67b6","text":""},{"location":"zh/MAIN-CONTROL/ESP32-S3-DEVKITC-1/ESP32-S3-DEVKITC-1/","title":"ESP32-S3-DevKitC-1","text":"<ul> <li> <p> ESP32-S3-DevKitC-1</p> <p>  \u4f20\u9001\u95e8 </p> </li> </ul>"},{"location":"zh/PERCEPTION/perception/","title":"\u4f20\u611f","text":""}]}